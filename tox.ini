[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
jhack_root = {toxinidir}/jhack

[testenv]
setenv =
  PYTHONPATH = {[vars]jhack_root}/utils/event_recorder
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH


[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    ruff
    isort
commands =
    isort --profile black {[vars]jhack_root}
    black {[vars]jhack_root}
    ruff check --fix-only {[vars]jhack_root}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff
    pyproject-flake8
    pep8-naming
    isort
commands =
    ruff check {[vars]jhack_root} --exclude {[vars]jhack_root}/tests/
    isort --check-only --skip {[vars]jhack_root}/tests/ --diff {[vars]jhack_root}
    black --check --diff {[vars]jhack_root}

[testenv:unit]
description = Run evt recorder runtime

deps =
    # use pyproject.toml as dependencies source
    .
    pytest
    coverage[toml]
commands =
    coverage run --source={[vars]jhack_root} \
        -m pytest {[vars]jhack_root}/tests -v --tb native -s {posargs}
    coverage report
